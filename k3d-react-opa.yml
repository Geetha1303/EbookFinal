apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend

spec:
  selector:
    matchLabels:
      component: frontend
  template:
    metadata:
      labels:
        component: frontend
    spec:
      volumes:
      - name: opa-config-vol
        configMap:
          name: opa-istio-config
      containers:
      - name: opa
        image: openpolicyagent/opa:0.42.2-envoy-rootless
        volumeMounts:
        - readOnly: true
          mountPath: /config
          name: opa-config-vol
        livenessProbe:
            httpGet:
              path: /health
              scheme: HTTP
              port: 8282
            initialDelaySeconds: 5    # Tune these periods for your environemnt
            periodSeconds: 5
        readinessProbe:
             httpGet:
               path: /health?bundle=true # Include bundle activation in readiness
               scheme: HTTP
               port: 8282
             initialDelaySeconds: 5
             periodSeconds: 5
        args:
          - "run"
          - "--server"
          - "--ignore=.*"
          - "--config-file=/config/conf.yaml"
          - "--authorization=basic"
          - "--addr=http://127.0.0.1:8181"
          - "--diagnostic-addr=0.0.0.0:8282"
  containers:
        - name: frontend
          image: sreenathkk96/frontendreact:0.0.17  #12c for back-service name put  in localhost #13E for Elasticip and 80port #14P public ip with 80port 17 for without .env pass env
          imagePullPolicy: Always
          stdin: true
          tty: true
          ports:
            - containerPort: 3000
          env:
            - name: REACT_APP_API_URL
              value: http://localhost:8080/api/v1/employees
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: back-deploy
spec:
  selector:
    matchLabels:
      component: backend
  template:
    metadata:
      labels:
        component: backend
    spec:
      volumes:
      - name: opa-config-vol
        configMap:
          name: opa-istio-config
      containers:
      - name: opa
        image: openpolicyagent/opa:0.42.2-envoy-rootless
        volumeMounts:
        - readOnly: true
          mountPath: /config
          name: opa-config-vol
        livenessProbe:
            httpGet:
              path: /health
              scheme: HTTP
              port: 8282
            initialDelaySeconds: 5    # Tune these periods for your environemnt
            periodSeconds: 5
        readinessProbe:
             httpGet:
               path: /health?bundle=true # Include bundle activation in readiness
               scheme: HTTP
               port: 8282
             initialDelaySeconds: 5
             periodSeconds: 5
        args:
          - "run"
          - "--server"
          - "--ignore=.*"
          - "--config-file=/config/conf.yaml"
          - "--authorization=basic"
          - "--addr=http://127.0.0.1:8181"
          - "--diagnostic-addr=0.0.0.0:8282"
  containers:
        - name: backend
          image: sreenathkk96/backendspring:0.0.17
          imagePullPolicy: Always

          ports:
            - containerPort: 8080
          env:
           - name: DB_SERVER
             value: mongo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
spec:
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      volumes:
      - name: opa-config-vol
        configMap:
          name: opa-istio-config
      containers:
      - name: opa
        image: openpolicyagent/opa:0.42.2-envoy-rootless
        volumeMounts:
        - readOnly: true
          mountPath: /config
          name: opa-config-vol
        livenessProbe:
            httpGet:
              path: /health
              scheme: HTTP
              port: 8282
            initialDelaySeconds: 5    # Tune these periods for your environemnt
            periodSeconds: 5
        readinessProbe:
             httpGet:
               path: /health?bundle=true # Include bundle activation in readiness
               scheme: HTTP
               port: 8282
             initialDelaySeconds: 5
             periodSeconds: 5
        args:
          - "run"
          - "--server"
          - "--ignore=.*"
          - "--config-file=/config/conf.yaml"
          - "--authorization=basic"
          - "--addr=http://127.0.0.1:8181"
          - "--diagnostic-addr=0.0.0.0:8282"
  containers:
        - name: mongo
          image: mongo:3.6.17-xenial
          ports:
            - containerPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: back-service
spec:
  selector:
    component: backend
  ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
      
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    component: frontend
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000
          
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  selector:
    app: mongo
  ports:
    - port: 27017
      targetPort: 27017
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
    - http:
        paths:
          - path: /api/v1/employees
            pathType: Prefix
            backend:
              service:
                name: back-service
                port:
                  number: 8080
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 3000
---
